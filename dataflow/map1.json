{
	"name": "map1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DTOutput1",
						"type": "DatasetReference"
					},
					"name": "FixedTCN1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Final1",
						"type": "DatasetReference"
					},
					"name": "TCN1CSV"
				}
			],
			"transformations": [
				{
					"name": "MapFields1"
				}
			],
			"script": "parameters{\n\tRCID as string ('1,2'),\n\tSQNR as string ('3,8'),\n\tTDNR as string ('11,15'),\n\tCDGT as string ('26,1'),\n\tTCNR as string ('27,15'),\n\tTCND as string ('42,1'),\n\tTRNC as string ('43,4'),\n\tFNDT as string ('47,1'),\n\tRTYP as string ('48,1'),\n\tINTR1 as string ('49,1'),\n\tFVIN as string ('50,1'),\n\tTKMI as string ('51,1'),\n\tCJCP as string ('52,3'),\n\tCREL as string ('55,2'),\n\tCTOT as string ('57,2'),\n\tCPTK as string ('59,10'),\n\tCPUI as string ('69,4'),\n\tATKT as string ('73,15'),\n\tRPSI as string ('88,4'),\n\tPNRR as string ('92,13'),\n\tSUDA as string ('105,2'),\n\tFILL1 as string ('107,1'),\n\tPXNM as string ('108,49'),\n\tDAIS as string ('157,8'),\n\tTIOT as string ('165,1'),\n\tAGTN as string ('166,8'),\n\tAREI as string ('174,1'),\n\tNRCT as string ('175,1'),\n\tNRMI as string ('176,1'),\n\tTIIS as string ('177,4'),\n\tRDII as string ('181,1'),\n\tCLID as string ('182,15'),\n\tBEOT as string ('197,1'),\n\tBOON as string ('198,8'),\n\tBISO as string ('206,2'),\n\tPOSA as string ('208,5'),\n\tPOIS as string ('213,5'),\n\tTISO1 as string ('218,2'),\n\tSCNF1 as string ('220,16'),\n\tSCNT1 as string ('236,4'),\n\tALTP as string ('240,1'),\n\tALNC as string ('241,8'),\n\tTISO2 as string ('249,2'),\n\tSCNF2 as string ('251,16'),\n\tSCNT2 as string ('267,4'),\n\tPLAT as string ('271,1'),\n\tAGRE as string ('272,1'),\n\tPVDR as string ('273,1'),\n\tACOS as string ('274,3'),\n\tINTR2 as string ('277,2'),\n\tFILL2 as string ('279,34'),\n\tFVFT1 as string ('313,2'),\n\tFVFT2 as string ('315,2'),\n\tFVFT3 as string ('317,2'),\n\tFVFT4 as string ('319,2'),\n\tFVFT5 as string ('321,2'),\n\tFVFT6 as string ('323,2'),\n\tFVFT7 as string ('325,2'),\n\tFVFT8 as string ('327,2'),\n\tFVFT9 as string ('329,2'),\n\tFVFT10 as string ('331,2'),\n\tBAID as string ('333,7'),\n\tINLS as string ('340,4'),\n\tSTAT as string ('344,3'),\n\tRTIT as string ('347,1'),\n\tFCRI as string ('348,1'),\n\tETKI as string ('349,2'),\n\tNOTE as string ('351,1'),\n\tADTG as string ('352,1'),\n\tFILL3 as string ('353,1'),\n\tDATA as string ('354,4'),\n\tVOIN as string ('358,1'),\n\tESAC as string ('359,14'),\n\tATCS as string ('373,1'),\n\tTACN as string ('374,5'),\n\tISOC as string ('379,2'),\n\tSASI as string ('381,4'),\n\tEINV as string ('385,1'),\n\tEEND as string ('386,1'),\n\tEREF as string ('387,1'),\n\tTKOF as string ('388,9'),\n\tCONS as string ('397,3'),\n\tEVDT as string ('400,1')\n}\nsource(output(\n\t\tColumn_1 as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tignoreNoFilesFound: false) ~> FixedTCN1\nFixedTCN1 derive(RCID = substring(Column_1,toInteger(split($RCID,',')[1]),toInteger(split($RCID,',')[2])),\n\t\tSQNR = substring(Column_1,toInteger(split($SQNR,',')[1]),toInteger(split($SQNR,',')[2])),\n\t\tTDNR = substring(Column_1,toInteger(split($TDNR,',')[1]),toInteger(split($TDNR,',')[2])),\n\t\tCDGT = substring(Column_1,toInteger(split($CDGT,',')[1]),toInteger(split($CDGT,',')[2])),\n\t\tTCNR = substring(Column_1,toInteger(split($TCNR,',')[1]),toInteger(split($TCNR,',')[2])),\n\t\tTCND = substring(Column_1,toInteger(split($TCND,',')[1]),toInteger(split($TCND,',')[2])),\n\t\tTRNC = substring(Column_1,toInteger(split($TRNC,',')[1]),toInteger(split($TRNC,',')[2])),\n\t\tFNDT = substring(Column_1,toInteger(split($FNDT,',')[1]),toInteger(split($FNDT,',')[2])),\n\t\tRTYP = substring(Column_1,toInteger(split($RTYP,',')[1]),toInteger(split($RTYP,',')[2])),\n\t\tINTR1 = substring(Column_1,toInteger(split($INTR1,',')[1]),toInteger(split($INTR1,',')[2])),\n\t\tFVIN = substring(Column_1,toInteger(split($FVIN,',')[1]),toInteger(split($FVIN,',')[2])),\n\t\tTKMI = substring(Column_1,toInteger(split($TKMI,',')[1]),toInteger(split($TKMI,',')[2])),\n\t\tCJCP = substring(Column_1,toInteger(split($CJCP,',')[1]),toInteger(split($CJCP,',')[2])),\n\t\tCREL = substring(Column_1,toInteger(split($CREL,',')[1]),toInteger(split($CREL,',')[2])),\n\t\tCTOT = substring(Column_1,toInteger(split($CTOT,',')[1]),toInteger(split($CTOT,',')[2])),\n\t\tCPTK = substring(Column_1,toInteger(split($CPTK,',')[1]),toInteger(split($CPTK,',')[2])),\n\t\tCPUI = substring(Column_1,toInteger(split($CPUI,',')[1]),toInteger(split($CPUI,',')[2])),\n\t\tATKT = substring(Column_1,toInteger(split($ATKT,',')[1]),toInteger(split($ATKT,',')[2])),\n\t\tRPSI = substring(Column_1,toInteger(split($RPSI,',')[1]),toInteger(split($RPSI,',')[2])),\n\t\tPNRR = substring(Column_1,toInteger(split($PNRR,',')[1]),toInteger(split($PNRR,',')[2])),\n\t\tSUDA = substring(Column_1,toInteger(split($SUDA,',')[1]),toInteger(split($SUDA,',')[2])),\n\t\tFILL1 = substring(Column_1,toInteger(split($FILL1,',')[1]),toInteger(split($FILL1,',')[2])),\n\t\tPXNM = substring(Column_1,toInteger(split($PXNM,',')[1]),toInteger(split($PXNM,',')[2])),\n\t\tDAIS = substring(Column_1,toInteger(split($DAIS,',')[1]),toInteger(split($DAIS,',')[2])),\n\t\tTIOT = substring(Column_1,toInteger(split($TIOT,',')[1]),toInteger(split($TIOT,',')[2])),\n\t\tAGTN = substring(Column_1,toInteger(split($AGTN,',')[1]),toInteger(split($AGTN,',')[2])),\n\t\tAREI = substring(Column_1,toInteger(split($AREI,',')[1]),toInteger(split($AREI,',')[2])),\n\t\tNRCT = substring(Column_1,toInteger(split($NRCT,',')[1]),toInteger(split($NRCT,',')[2])),\n\t\tNRMI = substring(Column_1,toInteger(split($NRMI,',')[1]),toInteger(split($NRMI,',')[2])),\n\t\tTIIS = substring(Column_1,toInteger(split($TIIS,',')[1]),toInteger(split($TIIS,',')[2])),\n\t\tRDII = substring(Column_1,toInteger(split($RDII,',')[1]),toInteger(split($RDII,',')[2])),\n\t\tCLID = substring(Column_1,toInteger(split($CLID,',')[1]),toInteger(split($CLID,',')[2])),\n\t\tBEOT = substring(Column_1,toInteger(split($BEOT,',')[1]),toInteger(split($BEOT,',')[2])),\n\t\tBOON = substring(Column_1,toInteger(split($BOON,',')[1]),toInteger(split($BOON,',')[2])),\n\t\tBISO = substring(Column_1,toInteger(split($BISO,',')[1]),toInteger(split($BISO,',')[2])),\n\t\tPOSA = substring(Column_1,toInteger(split($POSA,',')[1]),toInteger(split($POSA,',')[2])),\n\t\tPOIS = substring(Column_1,toInteger(split($POIS,',')[1]),toInteger(split($POIS,',')[2])),\n\t\tTISO1 = substring(Column_1,toInteger(split($TISO1,',')[1]),toInteger(split($TISO1,',')[2])),\n\t\tSCNF1 = substring(Column_1,toInteger(split($SCNF1,',')[1]),toInteger(split($SCNF1,',')[2])),\n\t\tSCNT1 = substring(Column_1,toInteger(split($SCNT1,',')[1]),toInteger(split($SCNT1,',')[2])),\n\t\tALTP = substring(Column_1,toInteger(split($ALTP,',')[1]),toInteger(split($ALTP,',')[2])),\n\t\tALNC = substring(Column_1,toInteger(split($ALNC,',')[1]),toInteger(split($ALNC,',')[2])),\n\t\tTISO2 = substring(Column_1,toInteger(split($TISO2,',')[1]),toInteger(split($TISO2,',')[2])),\n\t\tSCNF2 = substring(Column_1,toInteger(split($SCNF2,',')[1]),toInteger(split($SCNF2,',')[2])),\n\t\tSCNT2 = substring(Column_1,toInteger(split($SCNT2,',')[1]),toInteger(split($SCNT2,',')[2])),\n\t\tPLAT = substring(Column_1,toInteger(split($PLAT,',')[1]),toInteger(split($PLAT,',')[2])),\n\t\tAGRE = substring(Column_1,toInteger(split($AGRE,',')[1]),toInteger(split($AGRE,',')[2])),\n\t\tPVDR = substring(Column_1,toInteger(split($PVDR,',')[1]),toInteger(split($PVDR,',')[2])),\n\t\tACOS = substring(Column_1,toInteger(split($ACOS,',')[1]),toInteger(split($ACOS,',')[2])),\n\t\tINTR2 = substring(Column_1,toInteger(split($INTR2,',')[1]),toInteger(split($INTR2,',')[2])),\n\t\tFILL2 = substring(Column_1,toInteger(split($FILL2,',')[1]),toInteger(split($FILL2,',')[2])),\n\t\tFVFT1 = substring(Column_1,toInteger(split($FVFT1,',')[1]),toInteger(split($FVFT1,',')[2])),\n\t\tFVFT2 = substring(Column_1,toInteger(split($FVFT2,',')[1]),toInteger(split($FVFT2,',')[2])),\n\t\tFVFT3 = substring(Column_1,toInteger(split($FVFT3,',')[1]),toInteger(split($FVFT3,',')[2])),\n\t\tFVFT4 = substring(Column_1,toInteger(split($FVFT4,',')[1]),toInteger(split($FVFT4,',')[2])),\n\t\tFVFT5 = substring(Column_1,toInteger(split($FVFT5,',')[1]),toInteger(split($FVFT5,',')[2])),\n\t\tFVFT6 = substring(Column_1,toInteger(split($FVFT6,',')[1]),toInteger(split($FVFT6,',')[2])),\n\t\tFVFT7 = substring(Column_1,toInteger(split($FVFT7,',')[1]),toInteger(split($FVFT7,',')[2])),\n\t\tFVFT8 = substring(Column_1,toInteger(split($FVFT8,',')[1]),toInteger(split($FVFT8,',')[2])),\n\t\tFVFT9 = substring(Column_1,toInteger(split($FVFT9,',')[1]),toInteger(split($FVFT9,',')[2])),\n\t\tFVFT10 = substring(Column_1,toInteger(split($FVFT10,',')[1]),toInteger(split($FVFT10,',')[2])),\n\t\tBAID = substring(Column_1,toInteger(split($BAID,',')[1]),toInteger(split($BAID,',')[2])),\n\t\tINLS = substring(Column_1,toInteger(split($INLS,',')[1]),toInteger(split($INLS,',')[2])),\n\t\tSTAT = substring(Column_1,toInteger(split($STAT,',')[1]),toInteger(split($STAT,',')[2])),\n\t\tRTIT = substring(Column_1,toInteger(split($RTIT,',')[1]),toInteger(split($RTIT,',')[2])),\n\t\tFCRI = substring(Column_1,toInteger(split($FCRI,',')[1]),toInteger(split($FCRI,',')[2])),\n\t\tETKI = substring(Column_1,toInteger(split($ETKI,',')[1]),toInteger(split($ETKI,',')[2])),\n\t\tNOTE = substring(Column_1,toInteger(split($NOTE,',')[1]),toInteger(split($NOTE,',')[2])),\n\t\tADTG = substring(Column_1,toInteger(split($ADTG,',')[1]),toInteger(split($ADTG,',')[2])),\n\t\tFILL3 = substring(Column_1,toInteger(split($FILL3,',')[1]),toInteger(split($FILL3,',')[2])),\n\t\tDATA = substring(Column_1,toInteger(split($DATA,',')[1]),toInteger(split($DATA,',')[2]))) ~> MapFields1\nMapFields1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tRCID as string,\n\t\tSQNR as string,\n\t\tTDNR as string,\n\t\tCDGT as string,\n\t\tTCNR as string,\n\t\tTCND as string,\n\t\tTRNC as string,\n\t\tFNDT as string,\n\t\tRTYP as string,\n\t\tINTR1 as string\n\t),\n\tfilePattern:'TCN_Final_1_[n].csv',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TCN1CSV"
		}
	}
}